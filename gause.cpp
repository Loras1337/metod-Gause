/*
-----------------------------------------------------------------------
-----▄▀ █▀▀▄ █▀▀ ▄▀▄ ▀█▀ █▀▀ █▀▄-----█▀▄ ▀▄░▄▀--------------------------
-----█░ █▐█▀ █▀▀ █▀█ ░█░ █▀▀ █░█-----█▀█ ░░█░░-------------------------
-----░▀ ▀░▀▀ ▀▀▀ ▀░▀ ░▀░ ▀▀▀ ▀▀░-----▀▀░ ░░▀░░-------------------------
-----------------------------------------------------------------------
-----╔╗╔═╗╔═══╗╔════╗╔═══╗╔╗╔═╗╔═══╗╔╗──╔╗-----╔══╗╔╗──╔╗╔═══╗╔═╗─╔╗---
-----║║║╔╝║╔═╗║╚══╗═║║╔═╗║║║║╔╝║╔═╗║║╚╗╔╝║-----╚╣─╝║╚╗╔╝║║╔═╗║║║╚╗║║---
-----║╚╝╝─║║─║║──╔╝╔╝║║─║║║╚╝╝─║║─║║╚╗║║╔╝-----─║║─╚╗║║╔╝║║─║║║╔╗╚╝║---
-----║╔╗║─║╚═╝║─╔╝╔╝─║╚═╝║║╔╗║─║║─║║─║╚╝║─-----─║║──║╚╝║─║╚═╝║║║╚╗║║---
-----║║║╚╗║╔═╗║╔╝═╚═╗║╔═╗║║║║╚╗║╚═╝║─╚╗╔╝─-----╔╣─╗─╚╗╔╝─║╔═╗║║║─║║║---
-----╚╝╚═╝╚╝─╚╝╚════╝╚╝─╚╝╚╝╚═╝╚═══╝──╚╝──-----╚══╝──╚╝──╚╝─╚╝╚╝─╚═╝---
-----------------------------------------------------------------------
*/
#include <iostream>//запрос из библиотеки с++  заголовочнго файла
#include <math.h>//запрос из библиотеки с++  заголовочнго файла
#include <stdlib.h>//запрос из библиотеки с++  заголовочнго файла
//использование группы функций, переменных и тд.
using namespace std;

int main()
{
	setlocale(LC_ALL, "Russian");//Русский язык т.к Иван Казаков на визулке 2017 года))
	int i, j, n, m;//переменые
	//создаем массив
	cout << "Введите количество уровнений: ";//количесво уравнение
	cin >> n;//запрос кол-ва уравнений
	cout << "Введите количество неизвестных: ";//количество неизвестных
	cin >> m;//запрос неизвестных
	m += 1; //по дефолту будет ноль и программа не станет даже спрашивать число
	float **matrix = new float *[n];//выдкляем память 
	for (i = 0; i < n; i++)//цикл
		matrix[i] = new float[m];

	
	//цикл
	for (i = 0; i < n; i++)

		for (j = 0; j < m; j++)
		{
			cout << " Массив " << "[" << i + 1 << " , " << j + 1 << "]: ";//говорим какую часть массива заполоняет юзер

			cin >> matrix[i][j];//собственно запрос чисел для массива
		}

	//выводим получившуюся матрицу
	cout << "Ваша матрица: " << endl;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < m; j++)
			cout << matrix[i][j] << "" << endl;//вывод после ввода уравнений и неизвестных
		
	}
	cout << endl;

	//Сам Метод Гауса или как его там
	float  tmp;
	int k;
	float *xx = new float[m];//выделяем пямять что бы не ругался на константу мол м уже была и памяти нет
	//прямой ход
	for (i = 0; i < n; i++)
	{
		tmp = matrix[i][i];
		for (j = n; j >= i; j--)
			matrix[i][j] /= tmp;
		for (j = i + 1; j < n; j++)
		{
			tmp = matrix[j][i];
			for (k = n; k >= i; k--)
				matrix[j][k] -= tmp * matrix[i][k];
		}
	}
	//обратный ход
	xx[n - 1] = matrix[n - 1][n];
	for (i = n - 2; i >= 0; i--)
	{
		xx[i] = matrix[i][n];
		for (j = i + 1; j < n; j++) xx[i] -= matrix[i][j] * xx[j];
	}

	
	for (i = 0; i < n; i++)
		cout << xx[i] << " " << endl;//Выводим решения


	
	
	
	
	//---------------------НЕ УДАЛЯТЬ------------------
	system("pause");//я два часа искал почему не работает программа
	//за одно нашел что нужно делитать матрицу что бы память не сьедала т.к мы запросили память для переменных "new"
	//_________________________________________________
	
	
	cin.get();//у меня запрос без этого не работает
	//можно добавить return 0 но и так работает
}
